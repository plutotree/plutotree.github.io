<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Hugo - 标签 - PlutoTree's Blog</title><link>https://plutotree.me/tags/hugo/</link><description>Hugo - 标签 - PlutoTree's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>plutotreetree@gmail.com (布鲁树)</managingEditor><webMaster>plutotreetree@gmail.com (布鲁树)</webMaster><lastBuildDate>Thu, 10 Apr 2025 01:00:00 +0800</lastBuildDate><atom:link href="https://plutotree.me/tags/hugo/" rel="self" type="application/rss+xml"/><item><title>博客从 Jekyll 迁移到 Hugo：Valine评论系统相关问题</title><link>https://plutotree.me/2025/04/migrate-from-jekyll-to-hugo/</link><pubDate>Thu, 10 Apr 2025 01:00:00 +0800</pubDate><author>布鲁树</author><guid>https://plutotree.me/2025/04/migrate-from-jekyll-to-hugo/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://pic-1251468582.file.myqcloud.com/pic/2025/04/10/VZLUG8.jpg" referrerpolicy="no-referrer">
            </div><p>最近将博客从 Jekyll 迁移到 Hugo 了，虽然 Valine 评论系统在 Hugo 中可以直接通过配置文件 <code>hugo.toml</code> 进行设置，但在实际使用中发现了一些坑，以下是整理的解决方案。</p>
<h2 id="1-配置-requiredfields-无效问题">1. 配置 <code>requiredFields</code> 无效问题</h2>
<p>在 Valine 的官方文档中提到，可以通过 <code>requiredFields</code> 配置字段来设置评论时的必填项，比如昵称、邮箱等。然而，在 Hugo 中直接配置后发现该功能无效。</p>
<h3 id="问题原因">问题原因</h3>
<p>Hugo 主题下文件 <code>layouts/partials/comment.html</code> 文件中只针对部分字段进行了处理，而没有对 <code>requiredFields</code> 进行正确处理。</p>
<h3 id="解决方法">解决方法</h3>
<p>将 <code>comment.html</code> 文件复制到项目中相同目录下，然后增加以下代码：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-html">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl">{{- with $valine.requiredFields -}} {{- $commentConfig = dict &#34;requiredFields&#34; .
</span></span><span class="line"><span class="cl">| dict &#34;valine&#34; | merge $commentConfig -}} {{- end -}}</span></span></code></pre></div></div>
<h2 id="2-gravatar-头像显示问题">2. Gravatar 头像显示问题</h2>
<p>在配置头像时发现，随机头像无法正常显示，例如以下头像地址。但是将域名替换为 <a href="https://www.gravatar.com/avatar/d41d8cd98f00b204e9800998ecf8427e?d=wavatar&amp;v=1.5.2" target="_blank" rel="noopener noreffer ">www.gravatar.com</a> 则可以正常显示。<br>
<a href="https://gravatar.loli.net/avatar/d41d8cd98f00b204e9800998ecf8427e?d=wavatar&amp;v=1.5.2" target="_blank" rel="noopener noreffer ">https://gravatar.loli.net/avatar/d41d8cd98f00b204e9800998ecf8427e?d=wavatar&v=1.5.2</a></p>
<h3 id="问题原因-1">问题原因</h3>
<p>Gravatar 的中转服务，gravatar.loli.net 存在处理上的问题，导致随机头像无法显示。</p>
<h3 id="解决方法-1">解决方法</h3>
<p>由于 Gravatar 的官网在国内访问存在较多问题，更换了另一个 Gravatar 的中转服务： cn.gravatar.com。在配置文件中增加 avatar_cdn 之后，发现这个配置不生效。需要增加类似的处理逻辑，修改 <code>comment.html</code> 文件：</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-html">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl">{{- with $valine.avatar_cdn -}} {{- $commentConfig = dict &#34;avatar_cdn&#34; . | dict
</span></span><span class="line"><span class="cl">&#34;valine&#34; | merge $commentConfig -}} {{- end -}}</span></span></code></pre></div></div>
<p>修改后，Gravatar 头像和随机头像的显示恢复正常，但邮箱为空时随机头像无法随机。</p>
<h2 id="邮箱为空时头像并不会随机">邮箱为空时头像并不会随机</h2>
<h3 id="问题原因-2">问题原因</h3>
<p>获取随机头像的 MD5 是根据邮箱地址进行生成，而邮箱地址为空时其生成的 MD5 是固定的，这也导致获取的也都是固定头像。</p>
<h3 id="解决方法-2">解决方法</h3>
<p>将 <code>valine.min.js</code> 中的 <code>t.get(&quot;mail&quot;)</code> 修改为 <code>t.get(&quot;mail&quot;) || t.get(&quot;nick&quot;)</code>，即邮箱为空时使用昵称计算随机头像。修改后需要将文件发布到 CDN 才能使用，具体步骤不在此赘述。</p>
<h2 id="qq-头像和昵称获取问题">QQ 头像和昵称获取问题</h2>
<p>在 Valine 中，昵称字段输入 QQ 时，预期是可以获取 QQ 头像和昵称的，但是实际测试的时候却无法正确获取。在 Chrome 的调试窗口，可以看到访问第三方的 API 地址的时候会报错：</p>
<p><a href="https://api.qjqq.cn/api/qqinfo?qq=12345" target="_blank" rel="noopener noreffer ">https://api.qjqq.cn/api/qqinfo?qq=12345</a></p>
<h3 id="问题原因-3">问题原因</h3>
<p>就在写该文章的几天前直接在浏览器中访问这个地址还是正常的，不过会因为跨域问题而导致在 Valine 中无法正常使用。今天访问这个地址，发现这个服务已经无法访问了，页面会跳转到一个 API 服务平台<a href="https://api.nsmao.net/" target="_blank" rel="noopener noreffer ">奶思猫</a>。</p>
<h3 id="解决方法-3">解决方法</h3>
<p>在网站上搜索后，发现有免费的<a href="https://api.nsmao.net/api/qq/query" target="_blank" rel="noopener noreffer ">QQ 信息服务接口</a>。这个 API 的回包结构和 Valine 中使用的 api.qjqq.cn 是不一致的。由于原来的接口已经下线，正确的回包结构目前也不清楚。好在现在有强大的 AI，直接把压缩的 JS 代码丢给 AI，它就能分析出原来处理 QQ 头像和昵称的逻辑。</p>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-javascript">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">e</span><span class="p">,</span> <span class="nx">t</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kd">var</span> <span class="nx">n</span> <span class="o">=</span> <span class="nx">i</span><span class="p">.</span><span class="k">default</span><span class="p">.</span><span class="nx">store</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">QQCacheKey</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="nx">n</span> <span class="o">&amp;&amp;</span> <span class="nx">n</span><span class="p">.</span><span class="nx">qq</span> <span class="o">==</span> <span class="nx">e</span>
</span></span><span class="line"><span class="cl">    <span class="o">?</span> <span class="nx">t</span> <span class="o">&amp;&amp;</span> <span class="nx">t</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">:</span> <span class="nx">i</span><span class="p">.</span><span class="k">default</span>
</span></span><span class="line"><span class="cl">        <span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">          <span class="nx">url</span><span class="o">:</span> <span class="s2">&#34;https://api.nsmao.net/api/qq/query?key=xx&amp;qq=&#34;</span> <span class="o">+</span> <span class="nx">e</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="nx">method</span><span class="o">:</span> <span class="s2">&#34;get&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">})</span>
</span></span><span class="line"><span class="cl">        <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">json</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="p">})</span>
</span></span><span class="line"><span class="cl">        <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="k">if</span> <span class="p">(</span><span class="mi">200</span> <span class="o">==</span> <span class="nx">n</span><span class="p">.</span><span class="nx">code</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="kd">var</span> <span class="nx">r</span> <span class="o">=</span> <span class="nx">n</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">nick</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="nx">a</span> <span class="o">=</span> <span class="nx">n</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">avatar</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="nx">u</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nx">nick</span><span class="o">:</span> <span class="nx">r</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="nx">qq</span><span class="o">:</span> <span class="nx">e</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="nx">pic</span><span class="o">:</span> <span class="nx">a</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">};</span>
</span></span><span class="line"><span class="cl">            <span class="nx">i</span><span class="p">.</span><span class="k">default</span><span class="p">.</span><span class="nx">store</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">QQCacheKey</span><span class="p">,</span> <span class="nx">u</span><span class="p">),</span> <span class="nx">t</span> <span class="o">&amp;&amp;</span> <span class="nx">t</span><span class="p">(</span><span class="nx">u</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">          <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span></span></span></code></pre></div></div>
<p>我们有两种方案分别是在客户端直接修改和在服务端进行中转：</p>
<p>方案 1：修改 Valine 中请求的 url 以及回包解析逻辑。方案修改起来很容易，最大的问题是会暴露了密钥。</p>
<ul>
<li>修改请求 URL：<code>api.njqq.cn/api/qqinfo?qq=xxx</code> 修改成 <code>https://api.nsmao.net/api/qq/query?key=xx&amp;qq=</code></li>
<li>修改昵称和头像的获取：<code>{var r=n.name,a=n.imgurl</code> 修改成 <code>{var r=n.data.nick,a=n.data.avatar</code>。</li>
</ul>
<p>方案 2：后台提供中转服务</p>
<p>通过自己的服务器封装中转接口，避免密钥暴露，接口可以丢给 AI 实现，但需要额外的服务维护成本。</p>
<p>下面是用 golang 实现的获取QQ资料的 HTTP 服务，功能就是将奶思猫提供的 QQ 资料的API接口转换成适配Valine的格式。需要设置下密钥和访问端口。</p>
<div class="code-block code-line-numbers" style="counter-reset: code-block 0">
    <div class="code-header language-golang">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="复制到剪贴板"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-golang" data-lang="golang"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nx">main</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="s">&#34;encoding/json&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="s">&#34;fmt&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="s">&#34;io/ioutil&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="s">&#34;log&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="s">&#34;net/http&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="s">&#34;os&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// APIResponse represents the response from the QQ API</span>
</span></span><span class="line"><span class="cl"><span class="kd">type</span> <span class="nx">APIResponse</span> <span class="kd">struct</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">Code</span>     <span class="kt">int</span>    <span class="s">`json:&#34;code&#34;`</span>
</span></span><span class="line"><span class="cl">        <span class="nx">Msg</span>      <span class="kt">string</span> <span class="s">`json:&#34;msg&#34;`</span>
</span></span><span class="line"><span class="cl">        <span class="nx">Data</span>     <span class="nx">QQData</span> <span class="s">`json:&#34;data&#34;`</span>
</span></span><span class="line"><span class="cl">        <span class="nx">ExecTime</span> <span class="kt">float64</span> <span class="s">`json:&#34;exec_time&#34;`</span>
</span></span><span class="line"><span class="cl">        <span class="nx">IP</span>       <span class="kt">string</span>  <span class="s">`json:&#34;ip&#34;`</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// QQData represents the data field in the API response</span>
</span></span><span class="line"><span class="cl"><span class="kd">type</span> <span class="nx">QQData</span> <span class="kd">struct</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">Nick</span>      <span class="kt">string</span> <span class="s">`json:&#34;nick&#34;`</span>
</span></span><span class="line"><span class="cl">        <span class="nx">Qid</span>       <span class="kt">string</span> <span class="s">`json:&#34;qid&#34;`</span>
</span></span><span class="line"><span class="cl">        <span class="nx">RegTime</span>   <span class="kt">string</span> <span class="s">`json:&#34;regTime&#34;`</span>
</span></span><span class="line"><span class="cl">        <span class="nx">Level</span>     <span class="kt">int</span>    <span class="s">`json:&#34;level&#34;`</span>
</span></span><span class="line"><span class="cl">        <span class="nx">Avatar</span>    <span class="kt">string</span> <span class="s">`json:&#34;avatar&#34;`</span>
</span></span><span class="line"><span class="cl">        <span class="nx">Email</span>     <span class="kt">string</span> <span class="s">`json:&#34;email&#34;`</span>
</span></span><span class="line"><span class="cl">        <span class="nx">IsVip</span>     <span class="kt">bool</span>   <span class="s">`json:&#34;is_vip&#34;`</span>
</span></span><span class="line"><span class="cl">        <span class="nx">IsYearsVip</span> <span class="kt">bool</span>  <span class="s">`json:&#34;is_years_vip&#34;`</span>
</span></span><span class="line"><span class="cl">        <span class="nx">VipLevel</span>  <span class="kt">int</span>    <span class="s">`json:&#34;vip_level&#34;`</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// ClientResponse represents the response we&#39;ll send to the client</span>
</span></span><span class="line"><span class="cl"><span class="kd">type</span> <span class="nx">ClientResponse</span> <span class="kd">struct</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">Code</span>   <span class="kt">int</span>    <span class="s">`json:&#34;code&#34;`</span>
</span></span><span class="line"><span class="cl">        <span class="nx">Name</span>   <span class="kt">string</span> <span class="s">`json:&#34;name&#34;`</span>
</span></span><span class="line"><span class="cl">        <span class="nx">ImgURL</span> <span class="kt">string</span> <span class="s">`json:&#34;imgurl&#34;`</span>
</span></span><span class="line"><span class="cl">        <span class="nx">Email</span>  <span class="kt">string</span> <span class="s">`json:&#34;email&#34;`</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">func</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// Get the API key from environment variable or use default</span>
</span></span><span class="line"><span class="cl">        <span class="nx">apiKey</span> <span class="o">:=</span> <span class="nx">os</span><span class="p">.</span><span class="nf">Getenv</span><span class="p">(</span><span class="s">&#34;QQ_API_KEY&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="nx">apiKey</span> <span class="o">==</span> <span class="s">&#34;&#34;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nx">apiKey</span> <span class="p">=</span> <span class="s">&#34;MY_KEY&#34;</span> <span class="c1">// Default key for development</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nx">http</span><span class="p">.</span><span class="nf">HandleFunc</span><span class="p">(</span><span class="s">&#34;/qq_api/qqinfo&#34;</span><span class="p">,</span> <span class="kd">func</span><span class="p">(</span><span class="nx">w</span> <span class="nx">http</span><span class="p">.</span><span class="nx">ResponseWriter</span><span class="p">,</span> <span class="nx">r</span> <span class="o">*</span><span class="nx">http</span><span class="p">.</span><span class="nx">Request</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="c1">// Get QQ number from query parameter</span>
</span></span><span class="line"><span class="cl">                <span class="nx">qqNumber</span> <span class="o">:=</span> <span class="nx">r</span><span class="p">.</span><span class="nx">URL</span><span class="p">.</span><span class="nf">Query</span><span class="p">().</span><span class="nf">Get</span><span class="p">(</span><span class="s">&#34;qq&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="nx">qqNumber</span> <span class="o">==</span> <span class="s">&#34;&#34;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                        <span class="nx">http</span><span class="p">.</span><span class="nf">Error</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span> <span class="s">&#34;Missing qq parameter&#34;</span><span class="p">,</span> <span class="nx">http</span><span class="p">.</span><span class="nx">StatusBadRequest</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                        <span class="k">return</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="c1">// Construct the API URL</span>
</span></span><span class="line"><span class="cl">                <span class="nx">apiURL</span> <span class="o">:=</span> <span class="nx">fmt</span><span class="p">.</span><span class="nf">Sprintf</span><span class="p">(</span><span class="s">&#34;https://api.nsmao.net/api/qq/query?key=%s&amp;qq=%s&#34;</span><span class="p">,</span> <span class="nx">apiKey</span><span class="p">,</span> <span class="nx">qqNumber</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="c1">// Make the request to the QQ API</span>
</span></span><span class="line"><span class="cl">                <span class="nx">resp</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">http</span><span class="p">.</span><span class="nf">Get</span><span class="p">(</span><span class="nx">apiURL</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                        <span class="nx">log</span><span class="p">.</span><span class="nf">Printf</span><span class="p">(</span><span class="s">&#34;Error making request to QQ API: %v&#34;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                        <span class="nx">http</span><span class="p">.</span><span class="nf">Error</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span> <span class="s">&#34;Failed to fetch QQ information&#34;</span><span class="p">,</span> <span class="nx">http</span><span class="p">.</span><span class="nx">StatusInternalServerError</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                        <span class="k">return</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">                <span class="k">defer</span> <span class="nx">resp</span><span class="p">.</span><span class="nx">Body</span><span class="p">.</span><span class="nf">Close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="c1">// Read the response body</span>
</span></span><span class="line"><span class="cl">                <span class="nx">body</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">ioutil</span><span class="p">.</span><span class="nf">ReadAll</span><span class="p">(</span><span class="nx">resp</span><span class="p">.</span><span class="nx">Body</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                        <span class="nx">log</span><span class="p">.</span><span class="nf">Printf</span><span class="p">(</span><span class="s">&#34;Error reading response body: %v&#34;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                        <span class="nx">http</span><span class="p">.</span><span class="nf">Error</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span> <span class="s">&#34;Failed to read QQ information&#34;</span><span class="p">,</span> <span class="nx">http</span><span class="p">.</span><span class="nx">StatusInternalServerError</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                        <span class="k">return</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="c1">// Parse the API response</span>
</span></span><span class="line"><span class="cl">                <span class="kd">var</span> <span class="nx">apiResp</span> <span class="nx">APIResponse</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">json</span><span class="p">.</span><span class="nf">Unmarshal</span><span class="p">(</span><span class="nx">body</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">apiResp</span><span class="p">);</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                        <span class="nx">log</span><span class="p">.</span><span class="nf">Printf</span><span class="p">(</span><span class="s">&#34;Error parsing API response: %v&#34;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                        <span class="nx">http</span><span class="p">.</span><span class="nf">Error</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span> <span class="s">&#34;Failed to parse QQ information&#34;</span><span class="p">,</span> <span class="nx">http</span><span class="p">.</span><span class="nx">StatusInternalServerError</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                        <span class="k">return</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="c1">// Prepare the client response</span>
</span></span><span class="line"><span class="cl">                <span class="nx">clientResp</span> <span class="o">:=</span> <span class="nx">ClientResponse</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                        <span class="nx">Code</span><span class="p">:</span>   <span class="mi">200</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                        <span class="nx">Name</span><span class="p">:</span>   <span class="s">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                        <span class="nx">ImgURL</span><span class="p">:</span> <span class="s">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                        <span class="nx">Email</span><span class="p">:</span>  <span class="s">&#34;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="c1">// Only populate the fields if the API request was successful</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="nx">apiResp</span><span class="p">.</span><span class="nx">Code</span> <span class="o">==</span> <span class="mi">200</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                        <span class="nx">clientResp</span><span class="p">.</span><span class="nx">Name</span> <span class="p">=</span> <span class="nx">apiResp</span><span class="p">.</span><span class="nx">Data</span><span class="p">.</span><span class="nx">Nick</span>
</span></span><span class="line"><span class="cl">                        <span class="nx">clientResp</span><span class="p">.</span><span class="nx">ImgURL</span> <span class="p">=</span> <span class="nx">apiResp</span><span class="p">.</span><span class="nx">Data</span><span class="p">.</span><span class="nx">Avatar</span>
</span></span><span class="line"><span class="cl">                        <span class="nx">clientResp</span><span class="p">.</span><span class="nx">Email</span> <span class="p">=</span> <span class="nx">apiResp</span><span class="p">.</span><span class="nx">Data</span><span class="p">.</span><span class="nx">Email</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                        <span class="c1">// If the API request failed, pass along the error code</span>
</span></span><span class="line"><span class="cl">                        <span class="nx">clientResp</span><span class="p">.</span><span class="nx">Code</span> <span class="p">=</span> <span class="nx">apiResp</span><span class="p">.</span><span class="nx">Code</span>
</span></span><span class="line"><span class="cl">                        <span class="nx">log</span><span class="p">.</span><span class="nf">Printf</span><span class="p">(</span><span class="s">&#34;API returned error: %s&#34;</span><span class="p">,</span> <span class="nx">apiResp</span><span class="p">.</span><span class="nx">Msg</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="c1">// Set content type header</span>
</span></span><span class="line"><span class="cl">                <span class="nx">w</span><span class="p">.</span><span class="nf">Header</span><span class="p">().</span><span class="nf">Set</span><span class="p">(</span><span class="s">&#34;Content-Type&#34;</span><span class="p">,</span> <span class="s">&#34;application/json&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="c1">// Encode and send the response</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">json</span><span class="p">.</span><span class="nf">NewEncoder</span><span class="p">(</span><span class="nx">w</span><span class="p">).</span><span class="nf">Encode</span><span class="p">(</span><span class="nx">clientResp</span><span class="p">);</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                        <span class="nx">log</span><span class="p">.</span><span class="nf">Printf</span><span class="p">(</span><span class="s">&#34;Error encoding client response: %v&#34;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                        <span class="nx">http</span><span class="p">.</span><span class="nf">Error</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span> <span class="s">&#34;Failed to encode response&#34;</span><span class="p">,</span> <span class="nx">http</span><span class="p">.</span><span class="nx">StatusInternalServerError</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                        <span class="k">return</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">})</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">// Start the HTTP server</span>
</span></span><span class="line"><span class="cl">        <span class="nx">port</span> <span class="o">:=</span> <span class="nx">os</span><span class="p">.</span><span class="nf">Getenv</span><span class="p">(</span><span class="s">&#34;PORT&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="nx">port</span> <span class="o">==</span> <span class="s">&#34;&#34;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nx">port</span> <span class="p">=</span> <span class="s">&#34;52101&#34;</span> <span class="c1">// Default port</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nx">log</span><span class="p">.</span><span class="nf">Printf</span><span class="p">(</span><span class="s">&#34;Starting server on port %s&#34;</span><span class="p">,</span> <span class="nx">port</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">http</span><span class="p">.</span><span class="nf">ListenAndServe</span><span class="p">(</span><span class="s">&#34;:&#34;</span><span class="o">+</span><span class="nx">port</span><span class="p">,</span> <span class="kc">nil</span><span class="p">);</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nx">log</span><span class="p">.</span><span class="nf">Fatalf</span><span class="p">(</span><span class="s">&#34;Failed to start server: %v&#34;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></div></div>
<p>另外还需要在 nginx 配置中进行 proxy_pass 的转发配置，这里不再赘述i。</p>
<h2 id="评论数据迁移">评论数据迁移</h2>
<p>如果 URL 没有改变，评论数据是无需处理的。如果 URL 发生了变化，并且你想保留之前的评论数据，那就需要手动进行迁移。 Valine 的所有数据是存储在 LeanCloud 中，可以很方便地通过脚本进行修改。</p>
<p>不过因为我的评论量少得可怜，我就直接手动修改了。</p>
<h2 id="总结">总结</h2>
<p>Valine 评论系统现在已经基于处理停止维护的状态了，而且新的版本源友也没有完全开源的服务，存在较大的局限性。未来如果有时间的话，升级 Waline 似乎是一个比较好的选择。Waline 不仅功能更完善，还提供了更好的国内访问体验和开源支持。另外最大的差异其实是 Waline 是需要后台服务，这一点可以说是优点，也可以说是限制。</p>
]]></description></item></channel></rss>